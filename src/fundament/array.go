package main

import "fmt"

/**
数组
 */

func main()  {

	a := [3]int{1,2,3} // 在 go 中，数组的长度也作为数组类型的一部分，
	// 因此，在声明时，如果没有实例化，则必须显式的给出大小，不然编译不通过
	// 如果，你实例化了，则可以不给出数组的大小，例如: a := [...]string{"a","b","b"},
	// 这时，go 解释器会自动推断出其大小
	fmt.Println(a)

	num := len(a)

	for i := 0; i < num; i++{
		fmt.Println(a[i])
	}



	/**
	指针数组，就是在普通的数组类型前面加上一个  '*' 符号,指针数组即 指针的数组，
	数组里面存放的全是指针【注意：元素是指针】
	 */
	aa := 0
	bb := 1
	b := [2]*int{&aa, &bb}
	n := len(b)
	for i := 0; i < n; i++{
		fmt.Println(b[i])
		fmt.Println(*b[i]) // 指针通过 * 取该地址值对应的数据
	}



	fmt.Println("_____________________________________________________________")


	/**
	数组指针: 即 数组的指针
	实质是 一个 指针，然后该指针 指向 一个数组
	 */
	cc := [...]int{1,2,3,4,5,6}
	var d *[6]int = &cc
	fmt.Println(d) // &[1 2 3 4 5 6]
	fmt.Println(&d) // 0xc00007e020
	fmt.Println(*d) // [1 2 3 4 5 6]

}
